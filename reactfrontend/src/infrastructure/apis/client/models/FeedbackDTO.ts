/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FeedbackCheckbox } from './FeedbackCheckbox';
import {
    FeedbackCheckboxFromJSON,
    FeedbackCheckboxFromJSONTyped,
    FeedbackCheckboxToJSON,
} from './FeedbackCheckbox';
import type { FeedbackSelectEnum } from './FeedbackSelectEnum';
import {
    FeedbackSelectEnumFromJSON,
    FeedbackSelectEnumFromJSONTyped,
    FeedbackSelectEnumToJSON,
} from './FeedbackSelectEnum';

/**
 * 
 * @export
 * @interface FeedbackDTO
 */
export interface FeedbackDTO {
    /**
     * 
     * @type {string}
     * @memberof FeedbackDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof FeedbackDTO
     */
    descriere?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FeedbackDTO
     */
    experienta?: boolean;
    /**
     * 
     * @type {FeedbackSelectEnum}
     * @memberof FeedbackDTO
     */
    nota?: FeedbackSelectEnum;
    /**
     * 
     * @type {Array<FeedbackCheckbox>}
     * @memberof FeedbackDTO
     */
    likes?: Array<FeedbackCheckbox> | null;
}

/**
 * Check if a given object implements the FeedbackDTO interface.
 */
export function instanceOfFeedbackDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FeedbackDTOFromJSON(json: any): FeedbackDTO {
    return FeedbackDTOFromJSONTyped(json, false);
}

export function FeedbackDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'descriere': !exists(json, 'descriere') ? undefined : json['descriere'],
        'experienta': !exists(json, 'experienta') ? undefined : json['experienta'],
        'nota': !exists(json, 'nota') ? undefined : FeedbackSelectEnumFromJSON(json['nota']),
        'likes': !exists(json, 'likes') ? undefined : (json['likes'] === null ? null : (json['likes'] as Array<any>).map(FeedbackCheckboxFromJSON)),
    };
}

export function FeedbackDTOToJSON(value?: FeedbackDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'descriere': value.descriere,
        'experienta': value.experienta,
        'nota': FeedbackSelectEnumToJSON(value.nota),
        'likes': value.likes === undefined ? undefined : (value.likes === null ? null : (value.likes as Array<any>).map(FeedbackCheckboxToJSON)),
    };
}

