/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
} from './Address';
import type { OrderBook } from './OrderBook';
import {
    OrderBookFromJSON,
    OrderBookFromJSONTyped,
    OrderBookToJSON,
} from './OrderBook';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface OrderDTO
 */
export interface OrderDTO {
    /**
     * 
     * @type {string}
     * @memberof OrderDTO
     */
    id?: string;
    /**
     * 
     * @type {User}
     * @memberof OrderDTO
     */
    user?: User;
    /**
     * 
     * @type {Address}
     * @memberof OrderDTO
     */
    address?: Address;
    /**
     * 
     * @type {Array<OrderBook>}
     * @memberof OrderDTO
     */
    orderBooks?: Array<OrderBook> | null;
}

/**
 * Check if a given object implements the OrderDTO interface.
 */
export function instanceOfOrderDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderDTOFromJSON(json: any): OrderDTO {
    return OrderDTOFromJSONTyped(json, false);
}

export function OrderDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),
        'orderBooks': !exists(json, 'orderBooks') ? undefined : (json['orderBooks'] === null ? null : (json['orderBooks'] as Array<any>).map(OrderBookFromJSON)),
    };
}

export function OrderDTOToJSON(value?: OrderDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': UserToJSON(value.user),
        'address': AddressToJSON(value.address),
        'orderBooks': value.orderBooks === undefined ? undefined : (value.orderBooks === null ? null : (value.orderBooks as Array<any>).map(OrderBookToJSON)),
    };
}

